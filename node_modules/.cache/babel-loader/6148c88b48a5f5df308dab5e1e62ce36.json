{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"C:/Users/103421/Desktop/sample-app1_20220224/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/103421/Desktop/sample-app1_20220224/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:/Users/103421/Desktop/sample-app1_20220224/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"C:/Users/103421/Desktop/sample-app1_20220224/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\103421\\\\Desktop\\\\sample-app1_20220224\\\\client\\\\src\\\\QrLogin.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect, useRef } from 'react';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport { TextField, Button, Container, Grid, Backdrop, CircularProgress } from '@material-ui/core';\nimport axios from 'axios';\nimport jsQR from 'jsqr';\nvar useStyles = makeStyles(function (t) {\n  return createStyles({\n    content: {\n      padding: \"2em 0 2em 0\"\n    },\n    execButton: {\n      minWidth: \"12em\",\n      minHeight: \"4em\"\n    },\n    backdrop: {\n      zIndex: t.zIndex.drawer + 1,\n      color: '#fff'\n    }\n  });\n});\n\nvar ReadOnlyTextField = function ReadOnlyTextField(_ref) {\n  var props = Object.assign({}, _ref);\n  return /*#__PURE__*/_jsxDEV(TextField, _objectSpread({\n    fullWidth: true,\n    autoComplete: \"off\",\n    variant: \"outlined\",\n    InputLabelProps: {\n      shrink: true\n    },\n    InputProps: {\n      readOnly: true\n    }\n  }, props), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, _this);\n};\n\n_c = ReadOnlyTextField;\n\nfunction QrLogin() {\n  _s();\n\n  var c = useStyles();\n  var videoTag = useRef(null);\n  var canvasTag = useRef(null);\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      message = _useState2[0],\n      setMessage = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userName = _useState4[0],\n      setUserName = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isCapturing = _useState6[0],\n      setCapturing = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isLoading = _useState8[0],\n      setLoading = _useState8[1];\n\n  var loading = function loading(execute) {\n    return /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n              _context.prev = 1;\n              _context.next = 4;\n              return new Promise(function (r) {\n                return setTimeout(r, 200);\n              });\n\n            case 4:\n              _context.next = 6;\n              return execute();\n\n            case 6:\n              _context.prev = 6;\n              setLoading(false);\n              return _context.finish(6);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1,, 6, 9]]);\n    }));\n  };\n\n  var onScanControl = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var video, constraints;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              video = videoTag.current;\n\n              if (!(!isCapturing && navigator.mediaDevices)) {\n                _context3.next = 13;\n                break;\n              }\n\n              setUserName(\"\");\n              setMessage(\"読み取り中...\");\n              constraints = {\n                audio: false,\n                video: {\n                  facingMode: \"environment\"\n                }\n              };\n              _context3.next = 8;\n              return navigator.mediaDevices.getUserMedia(constraints);\n\n            case 8:\n              video.srcObject = _context3.sent;\n              video.onloadedmetadata = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n                return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        _context2.next = 2;\n                        return video.play();\n\n                      case 2:\n                        _context2.next = 4;\n                        return readQrCode();\n\n                      case 4:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2);\n              }));\n              setCapturing(true);\n              _context3.next = 15;\n              break;\n\n            case 13:\n              setMessage(\"\");\n              stopCamera(video);\n\n            case 15:\n              _context3.next = 20;\n              break;\n\n            case 17:\n              _context3.prev = 17;\n              _context3.t0 = _context3[\"catch\"](0);\n              setMessage(\"ERROR : \" + _context3.t0);\n\n            case 20:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 17]]);\n    }));\n\n    return function onScanControl() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var stopCamera = function stopCamera(video) {\n    if (video.srcObject) {\n      var tracks = video.srcObject.getTracks();\n\n      if (tracks) {\n        tracks.forEach(function (t) {\n          return t.stop();\n        });\n      }\n    }\n\n    video.pause();\n    video.srcObject = null;\n    setCapturing(false);\n  };\n\n  var readQrCode = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n      var retry, video, canvas, canvas2D, image, code, qrData;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              retry = function retry() {\n                setTimeout( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n                  return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n                    while (1) {\n                      switch (_context4.prev = _context4.next) {\n                        case 0:\n                          _context4.next = 2;\n                          return readQrCode();\n\n                        case 2:\n                        case \"end\":\n                          return _context4.stop();\n                      }\n                    }\n                  }, _callee4);\n                })), 200);\n              };\n\n              video = videoTag.current;\n\n              if (video.readyState !== video.HAVE_ENOUGH_DATA) {\n                retry();\n              } else {\n                canvas = canvasTag.current;\n                canvas.height = video.videoHeight;\n                canvas.width = video.videoWidth;\n                canvas2D = canvas.getContext(\"2d\");\n                canvas2D.drawImage(video, 0, 0, canvas.width, canvas.height);\n                image = canvas2D.getImageData(0, 0, canvas.width, canvas.height);\n                code = jsQR(image.data, image.width, image.height, {\n                  inversionAttempts: \"dontInvert\"\n                });\n\n                if (code) {\n                  qrData = code.data;\n                  stopCamera(video);\n                  setMessage(\"QR : \" + qrData);\n                  loading( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n                    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n                      while (1) {\n                        switch (_context5.prev = _context5.next) {\n                          case 0:\n                            _context5.next = 2;\n                            return startLogin(qrData);\n\n                          case 2:\n                          case \"end\":\n                            return _context5.stop();\n                        }\n                      }\n                    }, _callee5);\n                  })))();\n                } else {\n                  retry();\n                }\n              }\n\n            case 3:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function readQrCode() {\n      return _ref5.apply(this, arguments);\n    };\n  }(); //const qrData = \"A.CB1D29A7E504462F9D6052BB1695AA48.DFC2851302E48DA4EA21F147A48046C0\";\n\n\n  var startLogin = /*#__PURE__*/function () {\n    var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(qrData) {\n      var param, res, nameLast, nameFirst, _userName;\n\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.prev = 0;\n              setUserName(\"\");\n              setMessage(\"認証中...\");\n              param = {\n                qr_data: qrData\n              };\n              _context7.next = 6;\n              return axios.post(\"/qrlogin/api/endpoint/auth\", param);\n\n            case 6:\n              res = _context7.sent;\n              nameLast = res.data[\"name.last\"];\n              nameFirst = res.data[\"name.first\"];\n\n              if (!(!nameLast || !nameFirst)) {\n                _context7.next = 11;\n                break;\n              }\n\n              throw new Error(\"invalid response data\");\n\n            case 11:\n              _userName = nameLast + \" \" + nameFirst;\n              setUserName(_userName);\n              setMessage(\"\\u8A8D\\u8A3C\\u6210\\u529F : \".concat(qrData, \" -> \").concat(_userName));\n              _context7.next = 19;\n              break;\n\n            case 16:\n              _context7.prev = 16;\n              _context7.t0 = _context7[\"catch\"](0);\n              setMessage(\"ERROR : \" + _context7.t0);\n\n            case 19:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7, null, [[0, 16]]);\n    }));\n\n    return function startLogin(_x) {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    if (!navigator.mediaDevices) {\n      setMessage(\"ERROR : カメラが検出できません\");\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"column\",\n          justify: \"center\",\n          alignItems: \"stretch\",\n          className: c.content,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            style: {\n              textAlign: \"center\",\n              height: \"40vh\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"video\", {\n              ref: videoTag,\n              style: {\n                backgroundColor: \"#888888\",\n                height: \"100%\",\n                width: \"100%\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n              ref: canvasTag,\n              hidden: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            style: {\n              textAlign: \"center\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              className: c.execButton,\n              onClick: onScanControl,\n              children: isCapturing ? \"終了\" : \"スキャン開始(テストイベントA)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(ReadOnlyTextField, {\n              label: \"\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\",\n              value: message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(ReadOnlyTextField, {\n              label: \"\\u6C0F\\u540D\",\n              value: userName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Backdrop, {\n      className: c.backdrop,\n      open: isLoading,\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        color: \"inherit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\n\n_s(QrLogin, \"lWSC0oHf5aFvA/WJyU0sN8MzbtY=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = QrLogin;\nexport default QrLogin;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ReadOnlyTextField\");\n$RefreshReg$(_c2, \"QrLogin\");","map":{"version":3,"sources":["C:/Users/103421/Desktop/sample-app1_20220224/client/src/QrLogin.tsx"],"names":["React","useState","useEffect","useRef","makeStyles","createStyles","TextField","Button","Container","Grid","Backdrop","CircularProgress","axios","jsQR","useStyles","t","content","padding","execButton","minWidth","minHeight","backdrop","zIndex","drawer","color","ReadOnlyTextField","props","shrink","readOnly","QrLogin","c","videoTag","canvasTag","message","setMessage","userName","setUserName","isCapturing","setCapturing","isLoading","setLoading","loading","execute","Promise","r","setTimeout","onScanControl","video","current","navigator","mediaDevices","constraints","audio","facingMode","getUserMedia","srcObject","onloadedmetadata","play","readQrCode","stopCamera","tracks","getTracks","forEach","stop","pause","retry","readyState","HAVE_ENOUGH_DATA","canvas","height","videoHeight","width","videoWidth","canvas2D","getContext","drawImage","image","getImageData","code","data","inversionAttempts","qrData","startLogin","param","qr_data","post","res","nameLast","nameFirst","Error","textAlign","backgroundColor"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport { TextField, TextFieldProps, Button, Container, Grid, Backdrop, CircularProgress } from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport jsQR from 'jsqr';\r\n\r\nconst useStyles = makeStyles((t: Theme) => createStyles({\r\n\tcontent: { padding: \"2em 0 2em 0\" },\r\n\texecButton: { minWidth: \"12em\", minHeight: \"4em\" },\r\n\tbackdrop: { zIndex: t.zIndex.drawer + 1, color: '#fff' },\r\n}));\r\n\r\nconst ReadOnlyTextField: React.FC<TextFieldProps> = ({...props}) => {\r\n\treturn <TextField fullWidth autoComplete=\"off\" variant=\"outlined\" InputLabelProps={{shrink: true}} InputProps={{readOnly: true}} {...props}/>;\r\n};\r\n\r\nfunction QrLogin() {\r\n\tconst c = useStyles();\r\n\r\n\tconst videoTag = useRef(null);\r\n\tconst canvasTag = useRef(null);\r\n\r\n\tconst [message, setMessage] = useState(\"\");\r\n\tconst [userName, setUserName] = useState(\"\");\r\n\tconst [isCapturing, setCapturing] = useState(false);\r\n\tconst [isLoading, setLoading] = useState(false);\r\n\r\n\tconst loading = (execute: () => void): (() => void) => {\r\n\t\treturn async () => {\r\n\t\t\tsetLoading(true);\r\n\t\t\ttry {\r\n\t\t\t\tawait new Promise(r => setTimeout(r, 200));\r\n\t\t\t\tawait execute();\r\n\t\t\t}\r\n\t\t\tfinally {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\tconst onScanControl = async () => {\r\n\r\n\t\ttry {\r\n\t\t\tconst video = videoTag.current as any;\r\n\r\n\t\t\tif (!isCapturing && navigator.mediaDevices) {\r\n\t\t\t\tsetUserName(\"\");\r\n\t\t\t\tsetMessage(\"読み取り中...\");\r\n\r\n\t\t\t\tconst constraints = { audio: false, video: { facingMode: \"environment\" } };\r\n\r\n\t\t\t\tvideo.srcObject = await navigator.mediaDevices.getUserMedia(constraints);\r\n\t\t\t\tvideo.onloadedmetadata = async () => {\r\n\t\t\t\t\tawait video.play();\r\n\t\t\t\t\tawait readQrCode();\r\n\t\t\t\t};\r\n\r\n\t\t\t\tsetCapturing(true);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tsetMessage(\"\");\r\n\t\t\t\tstopCamera(video);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tsetMessage(\"ERROR : \" + err);\r\n\t\t}\r\n\t};\r\n\r\n\tconst stopCamera = (video : any) => {\r\n\r\n\t\tif (video.srcObject) {\r\n\t\t\tconst tracks = video.srcObject.getTracks();\r\n\t\t\tif (tracks) {\r\n\t\t\t\ttracks.forEach((t : any) => t.stop());\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvideo.pause();\r\n\t\tvideo.srcObject = null;\r\n\r\n\t\tsetCapturing(false);\r\n\t};\r\n\r\n\tconst readQrCode = async () => {\r\n\r\n\t\tconst retry = () => { setTimeout(async () => { await readQrCode() }, 200) };\r\n\r\n\t\tconst video = videoTag.current as any;\r\n\r\n\t\tif (video.readyState !== video.HAVE_ENOUGH_DATA) {\r\n\t\t\tretry();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst canvas = canvasTag.current as any;\r\n\t\t\tcanvas.height = video.videoHeight;\r\n\t\t\tcanvas.width = video.videoWidth;\r\n\r\n\t\t\tconst canvas2D = canvas.getContext(\"2d\");\r\n\t\t\tcanvas2D.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n\r\n\t\t\tconst image = canvas2D.getImageData(0, 0, canvas.width, canvas.height);\r\n\r\n\t\t\tvar code = jsQR(image.data, image.width, image.height, { inversionAttempts: \"dontInvert\" });\r\n\r\n\t\t\tif (code) {\r\n\t\t\t\tconst qrData = code.data;\r\n\r\n\t\t\t\tstopCamera(video);\r\n\t\t\t\tsetMessage(\"QR : \" + qrData);\r\n\r\n\t\t\t\tloading(async () => { await startLogin(qrData); })();\r\n\t\t\t} else {\r\n\t\t\t\tretry();\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t//const qrData = \"A.CB1D29A7E504462F9D6052BB1695AA48.DFC2851302E48DA4EA21F147A48046C0\";\r\n\r\n\tconst startLogin = async (qrData: string) => {\r\n\r\n\t\ttry {\r\n\t\t\tsetUserName(\"\");\r\n\t\t\tsetMessage(\"認証中...\");\r\n\r\n\t\t\tconst param = { qr_data: qrData };\r\n\t\t\tconst res = await axios.post(\"/qrlogin/api/endpoint/auth\", param);\r\n\r\n\t\t\tconst nameLast = res.data[\"name.last\"];\r\n\t\t\tconst nameFirst = res.data[\"name.first\"];\r\n\r\n\t\t\tif (!nameLast || !nameFirst) {\r\n\t\t\t\tthrow new Error(\"invalid response data\");\r\n\t\t\t}\r\n\r\n\t\t\tconst userName = nameLast + \" \" + nameFirst;\r\n\t\t\tsetUserName(userName);\r\n\r\n\t\t\tsetMessage(`認証成功 : ${qrData} -> ${userName}`);\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tsetMessage(\"ERROR : \" + err);\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!navigator.mediaDevices) {\r\n\t\t\tsetMessage(\"ERROR : カメラが検出できません\");\r\n\t\t}\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div>\r\n\t\t\t\t<Container>\r\n\t\t\t\t\t<Grid container direction=\"column\" justify=\"center\" alignItems=\"stretch\" className={c.content} spacing={3}>\r\n\t\t\t\t\t\t<Grid item style={{textAlign: \"center\", height: \"40vh\"}}>\r\n\t\t\t\t\t\t\t<video ref={videoTag} style={{backgroundColor: \"#888888\", height: \"100%\", width: \"100%\"}}></video>\r\n\t\t\t\t\t\t\t<canvas ref={canvasTag} hidden></canvas>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item style={{textAlign: \"center\"}}>\r\n\t\t\t\t\t\t\t<Button variant=\"contained\" color=\"primary\" className={c.execButton} onClick={onScanControl}>{isCapturing ? \"終了\" : \"スキャン開始(テストイベントA)\"}</Button>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t<ReadOnlyTextField label=\"メッセージ\" value={message}/>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t<ReadOnlyTextField label=\"氏名\" value={userName}/>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Container>\r\n\t\t\t</div>\r\n\t\t\t<Backdrop className={c.backdrop} open={isLoading}>\r\n\t\t\t\t<CircularProgress color=\"inherit\" />\r\n\t\t\t</Backdrop>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default QrLogin;"]},"metadata":{},"sourceType":"module"}